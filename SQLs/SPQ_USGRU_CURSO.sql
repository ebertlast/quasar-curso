CREATE OR ALTER PROCEDURE DBO.SPQ_USGRU_CURSO @JSON VARCHAR(MAX)
	WITH ENCRYPTION
AS
-- Variables
DECLARE @PARAMETROS NVARCHAR(MAX)
	,@IDGRUPO VARCHAR(40)
	,@METODO VARCHAR(100)
	,@USUARIO VARCHAR(20)
	,@GRUPO VARCHAR(8)
	,@SYS_COMPUTERNAME VARCHAR(254)
	,@SEDE VARCHAR(5)
	,@NOMBRE VARCHAR(120)
	,@AMBITOMTTO VARCHAR(4096)
	,@DESCRIPCION VARCHAR(100)

BEGIN
	SET LANGUAGE Spanish;

	--DEFINICION DE TABLA DE ERRORES
	DECLARE @TBLERRORES TABLE(ERROR VARCHAR(200));

	---- TOMA DEL GRUPO, SYS_COMPUTERNAME, SEDE   DE ACUERDO AL USUARIO
	--SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO) FROM USUSU WHERE USUARIO = @USUARIO
	--SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME FROM USUSU WHERE USUARIO = @USUARIO
	--SELECT @SEDE = IDSEDE FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME


	SELECT *
	INTO   #JSON
	FROM OPENJSON (@json)
		WITH (
				METODO         VARCHAR(100)      '$.METODO',
				USUARIO        VARCHAR(20)       '$.USUARIO',
				PARAMETROS     NVARCHAR(MAX)  AS JSON
		)

	SELECT @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
	FROM #JSON

	IF @METODO = 'GETGRUPO'
	BEGIN
		SELECT @IDGRUPO = GRUPO
		FROM OPENJSON (@PARAMETROS)
		WITH (GRUPO VARCHAR(40) '$.GRUPO')

		IF NOT EXISTS(SELECT * FROM USGRU WHERE GRUPO = @IDGRUPO)
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'EL GRUPO NO EXISTE'

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
        BEGIN
            SELECT 'KO' OK
            SELECT ERROR FROM @TBLERRORES
        END
        ELSE
		BEGIN
		   SELECT 'OK' OK
		   SELECT * FROM USGRU WHERE GRUPO = @IDGRUPO
	    END
	END

  IF @METODO = 'UPDATE'
  BEGIN
	  SELECT @IDGRUPO = GRUPO, @NOMBRE = NOMBRE, @AMBITOMTTO = AMBITOMTTO
	  FROM OPENJSON (@PARAMETROS)
	  WITH (
		  GRUPO VARCHAR(40) '$.GRUPO',
		  NOMBRE VARCHAR(120) '$.NOMBRE',
		  AMBITOMTTO VARCHAR(4096) '$.AMBITOMTTO'
	  )

    --SET @IDGRUPO = ''
    --SET @NOMBRE = ''

    IF COALESCE(@IDGRUPO, '') = ''
    BEGIN
      INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Identificador del grupo no debe estar vacía o nula'
    END

    IF COALESCE(@NOMBRE, '') = ''
    BEGIN
      INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Nombre del grupo no debe estar vacío o nulo'
    END

	  BEGIN TRAN
		  BEGIN TRY
			  UPDATE USGRU SET NOMBRE = @NOMBRE, AMBITOMTTO = @AMBITOMTTO
			  WHERE GRUPO = @IDGRUPO
		  END TRY

		  BEGIN CATCH
			  INSERT INTO @TBLERRORES(ERROR)
			  SELECT ERROR_MESSAGE()
		  END CATCH

		  IF (SELECT COUNT(1) FROM @TBLERRORES)>0
		  BEGIN
			  SELECT 'KO' OK
			  SELECT * FROM @TBLERRORES
			  ROLLBACK
			  RETURN
		  END
		  ELSE
		  BEGIN
	      COMMIT
			  SELECT 'OK' OK
			  --SELECT * FROM USGRU WHERE GRUPO = @IDGRUPO
		  END


  END

  IF @METODO = 'INSERT'
  BEGIN
    SELECT @IDGRUPO = GRUPO
    , @NOMBRE = NOMBRE
    , @AMBITOMTTO = AMBITOMTTO
	  FROM OPENJSON (@PARAMETROS)
	  WITH (
		  GRUPO VARCHAR(8) '$.GRUPO',
		  NOMBRE VARCHAR(40) '$.NOMBRE',
		  AMBITOMTTO VARCHAR(20) '$.AMBITOMTTO'
	  )

    BEGIN TRAN
		  BEGIN TRY
        INSERT INTO USGRU(GRUPO, NOMBRE,  AMBITOMTTO, TP_VARIABLE)
        SELECT @IDGRUPO, @NOMBRE, @AMBITOMTTO
        WHERE NOT EXISTS(SELECT 1 FROM USGRU WHERE GRUPO = @IDGRUPO)
        AND COALESCE(@IDGRUPO, '') <> ''
        AND COALESCE(@DESCRIPCION, '') <> ''

      END TRY
      BEGIN CATCH
			  INSERT INTO @TBLERRORES(ERROR)
			  SELECT ERROR_MESSAGE()
		  END CATCH

      IF COALESCE(@IDGRUPO, '') = ''
      BEGIN
        INSERT INTO @TBLERRORES(ERROR)
			  SELECT 'Identificador del grupo no debe estar vacío o nula'
      END

      IF COALESCE(@NOMBRE, '') = ''
      BEGIN
        INSERT INTO @TBLERRORES(ERROR)
			  SELECT 'Nombre del grupo no debe estar vacío o nula'
      END

      IF (SELECT COUNT(1) FROM @TBLERRORES)>0
		  BEGIN
			  SELECT 'KO' OK
			  SELECT * FROM @TBLERRORES
			  ROLLBACK
			  RETURN
		  END
		  ELSE
		  BEGIN
	      COMMIT
			  SELECT 'OK' OK
			  --SELECT * FROM USGRU WHERE GRUPO = @IDGRUPO
		  END
  END

  IF @METODO = 'DELETE'
  BEGIN
    SELECT @IDGRUPO = GRUPO 
	  FROM OPENJSON (@PARAMETROS)
	  WITH (GRUPO VARCHAR(20) '$.GRUPO')

    INSERT INTO @TBLERRORES(ERROR)
	  SELECT 'EL GRUPO ' + @IDGRUPO + ' NO EXISTE'
    WHERE NOT EXISTS(SELECT GRUPO FROM USGRU WHERE GRUPO = @IDGRUPO)

    BEGIN TRAN
      BEGIN TRY

        DELETE FROM USGRU WHERE GRUPO = @IDGRUPO

      END TRY
      BEGIN CATCH

        INSERT INTO @TBLERRORES(ERROR)
			  SELECT ERROR_MESSAGE()

      END CATCH

      IF (SELECT COUNT(1) FROM @TBLERRORES)>0
		  BEGIN
			  SELECT 'KO' AS OK
			  SELECT * FROM @TBLERRORES
			  ROLLBACK
			  RETURN
		  END
		  ELSE
		  BEGIN
	      COMMIT
			  SELECT 'OK' AS OK
		  END
      
  END
END
GO
RETURN
DECLARE @JSON VARCHAR(MAX)='{"MODELO":"USGRU_CURSO","METODO":"GETGRUPO","PARAMETROS":{"GRUPO":"PPAL"},"USUARIO":"OSOLANO"}'
EXEC DBO.SPQ_USGRU_CURSO @JSON

SELECT TOP 10 * FROM API_LOG ORDER BY ITEM DESC


SELECT * FROM USGRU WHERE GRUPO = 'PRUEBA'

delete from usvgs where grupo = 'PRUEBA'

